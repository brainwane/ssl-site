{% include_relative_once _data/projects.yml %}

intro: "Selected, recent papers from the Secure Systems Lab.
Click a project name to filter by project."

publications:

### DO NOT FORGET TO ADD YOUR NEW TAG &XXXXXX TO THE ENTRIES AT THE BOTTOM ###
### IF YOU FORGET, YOUR ENTRIES WILL NOT SHOW UP ON THE SITE! ###

  - &vaidya_cvcs_IFIPsec_19
    anchor: &vaidya_cvcs_IFIPsec_19
    title: "Commit Signatures for Centralized Version Control Systems"
    authors:
      - name: "S. Vaidya, S. Torres-Arias, R. Curtmola, and J. Cappos"
    projects:
      - 
    booktitle: "to be presented at the 34th International Conference on ICT Systems Security and Privacy 
    Protection (IFIP SEC '19)"
    year: ""
    pages: ""
    publisher: ""
    link: "papers/vaidya_cvc_IFIPsec_19.pdf"
    abstract: "Version Control Systems (VCS-es) play a major role in the software development life cycle, 
    yet historically their security has been relatively underdeveloped compared to their importance. 
    Recent history has shown that source code repositories represent appealing attack targets. Attacks that 
    violate the integrity of repository data can impact negatively millions of users. Some VCS-es,
    such as Git, employ com- mit signatures as a mechanism to provide developers with cryptographic
    protections for the code they contribute to a repository. However, an entire class of other VCS-es,
    including the well-known Apache Subversion (SVN), lacks such protections. We design the first commit
    signing mechanism for centralized version control systems, which supports features such as working
    with a subset of the repository and allowing clients to work on disjoint sets of files without
    having to retrieve each other’s changes. We implement a prototype for the proposed commit signing
    mechanism on top of the SVN codebase and show experimentally that it only incurs a modest overhead. 
    With our solution in place, the VCS security model is substantially improved."

  - &almashaqbeh_capnet_CNS_19
    anchor: &almashaqbeh_capnet_CNS_19
    title: "CAPnet: A Defense Against Cache Accounting Attacks on Content Distribution Networks"
    authors:
      - name: "G. Almashaqbeh, A. Bishop, K. Kelley, and J. Cappos"
    projects:
      - *CacheCash
    booktitle: "to be presented at the 7th Annual IEEE Conference on Communications and Network Security (CNS '19)"
    year: ""
    pages: ""
    publisher: ""
    link: ""
    abstract: ""
    
  - &almashaqbeh_ABC_cryblock_19
    anchor: &almashaqbeh_cryblock_19
    title: "ABC: A Cryptocurrency-Focused Threat Modeling Framework"
    authors:
      - name: "G. Almashaqbeh, A. Bishop, and J. Cappos"
    projects:
      - *CacheCash
    booktitle: "to be presented at the 2nd Workshop on Cryptocurrencies and Blockchains for Distributed Systems (CryBlock '19)"
    year: ""
    pages: ""
    publisher: ""
    link: ""
    abstract: ""
  - &oliveira_blindspots_SOUPS_18
    anchor: oliveira_blindspots_SOUPS_18
    title: "API Blindspots: Why Experienced Developers Write Vulnerable Code"
    authors:
      - name: "D. Oliveira, T. Lin, M. Rahman, R. Akefirad, D. Ellis, E. Perez, R. Bobhate, L. DeLong, J. Cappos, Y. Brun, and N. Ebner"
    projects:
      - *blindspots
    booktitle: "14th Symposium on Usable Privacy and Security (SOUPS '18)"
    year: ""
    pages: ""
    publisher: ""
    link: "https://people.cs.umass.edu/~brun/pubs/pubs/Oliveira18soups.pdf"
    abstract: "Despite the best efforts of the security community, security vulnerabilities
in software are still prevalent, with new vulnerabilities
reported daily and older ones stubbornly repeating themselves.
One potential source of these vulnerabilities is shortcomings in the
used language and library APIs. Developers tend to trust APIs, but
can misunderstand or misuse them, introducing vulnerabilities. We
call the causes of such misuse blindspots. In this paper, we study
API blindspots from the developers’ perspective to: (1) determine
the extent to which developers can detect API blindspots in code
and (2) examine the extent to which developer characteristics (i.e.,
perception of code correctness, familiarity with code, confidence,
professional experience, cognitive function, and personality) affect
this capability. We conducted a study with 109 developers from
four countries solving programming puzzles that involve Java APIs
known to contain blindspots. We find that (1) The presence of
blindspots correlated negatively with the developers’ accuracy in
answering implicit security questions and the developers’ ability to
identify potential security concerns in the code. This effect was
more pronounced for I/O-related APIs and for puzzles with higher
cyclomatic complexity. (2) Higher cognitive functioning and more
programming experience did not predict better ability to detect API
blindspots. (3) Developers exhibiting greater openness as a personality
trait were more likely to detect API blindspots. This study has
the potential to advance API security in (1) design, implementation,
and testing of new APIs; (2) addressing blindspots in legacy
APIs; (3) development of novel methods for developer recruitment
and training based on cognitive and personality assessments; and
(4) improvement of software development processes (e.g., establishment
of security and functionality teams)."

  - &cappos_tsumiki_TPDS_18
    anchor: cappos_tsumiki_TPDS_18
    title: "Tsumiki: A Meta-Platform for Building Your Own Testbed"
    authors:
      - name: "J.Cappos, Y. Zhuang, A. Rafetseder, and I. Beschastnikh"
    projects:
      - *seattle
      - *sensibility
    booktitle: "Transactions on Parallel and Distributed Systems"
    year: "2018"
    pages: ""
    publisher: "IEEE"
    link: "https://www.cs.ubc.ca/~bestchai/papers/tsumiki-tpds2018.pdf"
    abstract: "Network testbeds are essential research tools that have been
responsible for valuable network measurements and major advances in distributed
systems research. However, no single testbed can satisfy the requirements of
every research project,prompting continual efforts to develop new testbeds.
The common practice is to re-implement functionality anew for each testbed.
This work introduces a set of ready-to-use software components and interfaces
called Tsumiki to help researchers to rapidly prototype custom networked testbeds
without substantial effort. We derive Tsumiki’s design using a set of component
and interface design principles, and demonstrate that Tsumiki can be used to
 implement new, diverse, and useful testbeds. We detail a few such testbeds: a
testbed composed of Android devices, a testbed that uses Docker for sandboxing,
and a testbed that shares computation and storage resources among Facebook friends.
A user study demonstrated that students with no prior experience with networked
testbeds were able to use Tsumiki to create a testbed with new functionality and
run an experiment on this testbed in under an hour.
Furthermore, Tsumiki has been used in production in multiple testbeds,
resulting in installations on tens of thousands of devices and
use by thousands of researchers."


  - &afzali_git_asiaccs_18
    anchor: afzali_git_asiaccs_18
    title: "le-git-imate: Towards Verifiable Web-based Git Repositories"
    authors:
      - name: "H. Afzali, S. Torres, R. Curtmola, and J.Cappos"
    project: ""
    booktitle: "13th ACM Asia Conference on Computer & Communications Security (AsiaCCS '18)"
    year: ""
    pages: ""
    publisher: ""
    link: "https://ssl.engineering.nyu.edu/papers/afzali_asiaccs_2018.pdf"
    abstract: "Web-based Git hosting services such as GitHub and GitLab are popular
choices to manage and interact with Git repositories. However, they lack
an important security feature—the ability to sign Git commits. Users
instruct the server to perform repository operations on their behalf and
have to trust that the server will execute their requests faithfully.
Such trust may be unwarranted though because a malicious or a
compromised server may execute the requested actions in an incorrect
manner, leading to a different state of the repository than what the
user intended.

In this paper, we show a range of high-impact attacks that can be
executed stealthily when developers use the web UI of a Git hosting
service to perform common actions such as editing files or merging
branches. We then propose le-git-imate, a defense against these attacks
which provides security guarantees comparable and compatible with Git's
standard commit signing mechanism. We implement le-git-imate as a Chrome
browser extension.  le-git-imate
does not require changes on the server side and can thus be used
immediately. It also preserves current workflows used in Github/GitLab
and does not require the user to leave the browser, and it allows anyone
to verify that the server's actions faithfully follow the user's
requested actions.  Moreover, experimental evaluation using the browser
extension shows that le-git-imate has comparable performance with Git's
standard commit signature mechanism.  With our solution in place, users
can take advantage of GitHub/GitLab's web-based features without
sacrificing security, thus paving the way towards verifiable web-based
Git repositories."

  - &gopstein_atomswild_msr_18
    anchor: gopstein_atomswild_msr_18
    title: "Prevalence of Confusing Code in Software Projects: Atoms of Confusion in the Wild"
    authors:
      - name: "D. Gopstein, H. Zhou, P. Frankl, and J. Cappos"
    project: *atoms
    booktitle: "The 15th International Conference on Mining Software
    Repositories (MSR '18) <br/> Distinguished Paper Award"
    year: ""
    pages: ""
    publisher: ""
    link: "papers/gopstein_atomswild_msr_2018.pdf"
    abstract: "Prior work has shown that extremely small code patterns, such as
    the conditional operator and implicit type conversion, can cause
    considerable misunderstanding in programmers. Until now, the real world
    impact of these patterns - known as 'atoms of confusion' - was only
    speculative. This work uses a corpus of 14 of the most popular and
    influential open source C and C++ projects to measure the prevalence and
    significance of these small confusing patterns. Our results show that the 15
    known types of confusing micro patterns occur millions of times in programs
    like the Linux kernel and GCC, appearing on average once every 23 lines. We
    show there is a strong correlation between these confusing patterns and
    bug-fix commits, as well as a tendency for confusing patterns to be
    commented. We also explore patterns at the project level showing the rate of
    security vulnerabilities is higher in projects with more atoms. Finally,
    we examine real code examples containing these atoms, including ones that
    were used to find and fix bugs in our corpus. In total, this work demonstrates
    that beyond simple misunderstanding in the lab setting, atoms of confusion
    are both prevalent - occurring often in real projects, and meaningful -
    being removed by bug-fix commits at an elevated rate."

  - &yeh_atomseeg_fie_17
    anchor: yeh_atomseeg_fie_17
    title: "Detecting and Comparing Brain Activity in Short Program Comprehension Using EEG"
    authors:
      - name: "M.K.-C. Yeh, D. Gopstein, Y. Yan, and Y. Zhuang"
    project: *atoms
    booktitle: "IEEE Frontiers in Education Conference (FIE '17)"
    year: ""
    pages: ""
    publisher: "IEEE"
    link: "https://atomsofconfusion.com/papers/program-comprehension-eeg-2017.pdf"
    abstract: "Program comprehension is a common task in
software development. Programmers perform program
comprehension at different stages of the software development
life cycle. Detecting when a programmer experiences problems or
confusion can be difficult. Self-reported data may be useful, but
not reliable. More importantly, it is hard to use the self-reported
feedback in real time.
In this study, we use an inexpensive, non-invasive EEG device
to record 8 subjects’ brain activity in short program
comprehension. Subjects were presented either confusing or nonconfusing
C/C++ code snippets. Paired sample t-tests are used to
compare the average magnitude in alpha and theta frequency
bands. The results show that the differences in the average
magnitude in both bands are significant comparing confusing
and non-confusing questions. We then use ANOVA to detect
whether such difference also presented in the same type of
questions. We found that there is no significant difference across
questions of the same difficulty level. Our outcome, however,
shows alpha and theta band powers both increased when subjects
are under the heavy cognitive workload. Other research studies
reported a negative correlation between (upper) alpha and theta
band powers."

  - &zhuang_sensibilityhack_sas_18
    anchor: zhuang_sensibilityhack_sas_18
    title: "Four Years Experience: Making Sensibility Testbed Work for SAS"
    authors:
      - name: "Y. Zhuang, A. Rafetseder, R. Weiss, and J. Cappos"
    project: *sensibility
    booktitle: "13th Annual Sensors Applications Symposium (SAS '18)"
    year: ""
    pages: ""
    publisher: "IEEE"
    link: "https://ssl.engineering.nyu.edu/papers/zhuang_sensibility_sas_2018.pdf"
    abstract: "Sensibility Testbed is a framework for developing sensor-based
    applications that can run on user-provided smart- phones, and is easy to
program. Over the past four years, we have been organizing hackathons at SAS in
order to perform semi-controlled experiments with this platform. Any smartphone
user can install Sensibility Testbed and develop a simple sensor application in
less than a day. One of the problems with developing and testing such a
framework is that there are many possible hardware platforms and system
configurations. Hackathons provide an effective venue for observing the
development of applications on a range of devices by users with no previous
knowledge of the framework.

In this paper, we describe our experiences with hosting hackathons in a variety
of venues, including the challenges of working in unfamiliar environments and
with researchers who had no prior knowledge of the testbed. The feedback from
participants has been very useful in identifying usability issues, hardware
issues, and the types of sensor applications that users want to create."

  - &zhuang_sensibility_HotMobile_18
    anchor: zhuang_sensibility_HotMobile_18
    title: "Sensibility Testbed: Automated IRB Policy Enforcement in Mobile Research Apps"
    authors:
      - name: "Y. Zhuang, A. Rafetseder, Y. Hu, Y. Tian, and J. Cappos"
    project: *sensibility
    booktitle: "Proceedings of the 19th International Workshop on Mobile Computing Systems (HotMobile '18)"
    year: ""
    pages: "113-118"
    publisher: "ACM"
    link: "http://www.cs.uccs.edu/~yzhuang/CS4930_5930/spring2018/slides/hotmobile18.pdf"
    abstract: "Due to their omnipresence, mobile devices such as smartphones
could be tremendously valuable to researchers. However, since research
projects can extract data about device owners that could
be personal or sensitive, there are substantial privacy concerns.
Currently, the only regulation to protect user privacy for research
projects is through Institutional Review Boards (IRBs) from researchers’
institutions. However, there is no guarantee that researchers
will follow the IRB protocol. Even worse, researchers
without security expertise might build apps that are vulnerable to
attacks.
In this work, we present a platform, Sensibility Testbed, for
automated enforcement of the privacy policies set by IRBs. Our
platform enforces such policies when a researcher runs code on
mobile devices. The enforcement mechanism is a set of obfuscation
layers in a secure sandbox, that can be customized for any level
of IRB compliance, and can be augmented by policies set by the
device owner."

  - &kuppusamy_VT_IEEE_18
    anchor: kuppusamy_VT_IEEE_18
    title: "Uptane: Security and Customizability of Software Updates for Vehicles"
    authors:
      - name: "T. Kuppusamy, L. DeLong, and J. Cappos"
    project: *uptane
    booktitle: "Vehicular Technology Magazine"
    year: "March 2018"
    publisher: "IEEE"
    link: "http://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=8278174&tag=1"
    abstract: "A widely accepted premise is that complex software frequently
    contains bugs that can be remotely exploited by attackers. When this
    software is on an electronic control unit (ECU) in a vehicle,
exploitation of these bugs can have life or death
consequences. Since software for vehicles is likely to
proliferate and grow more complex in time, the number
of exploitable vulnerabilities will increase. As a result,
manufacturers are keenly aware of the need to quickly
and efficiently deploy updates so that software vulnerabilities
can be remedied as soon as possible.
However, existing software-update security systems
are not compromise resilient; if an attacker breaks into
any portion of an automobile’s infrastructure, they could
compromise numerous vehicles. The industry needs to
dynamically choose updates for vehicles based on fresh
information, forcing manufacturers to choose existing
systems that sign updates using a key stored on the
server. Attackers who compromise the repository can abuse this online key and cause malicious software to be
installed on vehicles.
In this article we discuss Uptane, the first, to our
knowledge, compromise-resilient software update security
system designed specifically for vehicles. It is
designed to make obtaining all the pieces required to
control a vehicle extremely difficult for attackers."

  - &kuppusamy_login_2017
    anchor: kuppusamy_login_2017
    title: "Securing Software Updates for Automotives Using Uptane"
    authors:
      - name: "T. Kuppusamy, L. DeLong, and J. Cappos"
    project: *uptane
    booktitle: ";login"
    year: "Summer 2017"
    pages: "63-67"
    publisher: "USENIX"
    link: "https://ssl.engineering.nyu.edu/papers/kuppusamy_login_2017.pdf"
    abstract: "Does secrecy improve security or impede securing software updates?
The automotive industry has traditionally relied upon proprietary
strategies developed behind closed doors. However, experience in the
software security community suggests that open development processes can
find flaws before they can be exploited. We introduce Uptane, a secure system
for updating software on automobiles that follows the open door strategy.
It was jointly developed with the University of Michigan Transportation
Research Institute (UMTRI), and the Southwest Research Institute (SWRI),
with input from the automotive industry as well as government regulators.
We are now looking for academics and security researchers to break our
system before black-hat hackers do it in the real world—with possibly fatal
consequences."

  - &atoms_fse_17
    anchor: atoms_fse_17
    title: "Understanding Misunderstandings in Source Code"
    authors:
      - name: "D. Gopstein, J. Iannacone, Y. Yan, L. DeLong, Y. Zhuang, K.C. Yeh,and J. Cappos"
    project: *atoms
    booktitle: "The 2017 ACM SIGSOFT Symposium on the Foundations of Software
    Engineering (FSE 2017)<br/>Distinguished Paper Award"
    link: /papers/gopstein_atoms_fse_2017.pdf
    abstract: "Humans often mistake the meaning of source code, and so misjudge
a programs true behavior. These mistakes can be caused
by extremely small, isolated patterns in code, which can lead to
significant runtime errors. These patterns are used in large, popular
software projects and even recommended in style guides. To
identify code patterns that may confuse programmers we extracted
a preliminary set of 'atoms of confusion' from known confusing
code. We show empirically in an experiment with 73 participants
that these code patterns can lead to a significantly increased rate of
misunderstanding versus equivalent code without the patterns. We
then go on to take larger confusing programs and measure (in an
experiment with 43 participants) the impact, in terms of programmer
confusion, of removing these confusing patterns. All of our
instruments, analysis code, and data are publicly available online
for replication, experimentation, and feedback."

  - &fogcomp_fwc_17
    anchor: fogcomp_fwc_17
    title: "Practical Fog Computing with Seattle"
    authors:
      - name: "A. Rafetseder, L. Pühringer, and J. Cappos"
    project: *seattle
    booktitle: "Fog World Congress 2017"
    link: https://github.com/aaaaalbert/fogwc/raw/SUBMITTED/paper.pdf
    abstract: "In this paper we present Seattle, a practical and publicly
accessible fog computing platform with a deployment history going back
to 2009. Seattle’s cross-platform portable sandbox implementation
tackles the widely-recognized issue of node heterogeneity. Its componentized
architecture supports a number of approaches to operating a Seattle-based fog
system, from isolated, standalone and peer-to-peer operations, to full-fledged
provisioning by a dedicated operator, or federations of many operators.
Seattle’s components and interfaces are designed for compatibility and reuse,
and may be aligned with existing trust boundaries between different stakeholders.
Seattle comprises implementations of all components discussed in this paper.
Its free, open-source software stack has been used for teaching and research;
outside groups have used existing Seattle components, and constructed new
components with compatible interfaces in order to adapt the platform to
their needs."

  - &mercury_usenix_17
    anchor: mercury_usenix_17
    title: "Mercury: Bandwidth-Effective Prevention of Rollback Attacks
     Against Community Repositories"
    authors:
      - name: "T. Kuppusamy, V. Diaz, and J. Cappos"
    project: *tuf
    booktitle: "The 2017 USENIX Annual Technical Conference (USENIX ATC 2017)"
    link: /papers/kuppusamy-mercury-usenix-2017.pdf
    abstract: "A popular community repository such as Docker Hub, PyPI,
    or RubyGems distributes tens of thousands of soft- ware projects to
    millions of users. The large number of projects and users make these
    repositories attractive targets for exploitation. After a repository
    compromise, a malicious party can launch a number of attacks on
    unsuspecting users, including rollback attacks that revert projects to
    obsolete and vulnerable versions. Unfortunately, due to the rapid rate
    at which packages are updated, existing techniques that protect against
    rollback attacks would cause each user to download 2–3 times the size of an
    average package in metadata each month, making them impractical to deploy.

    In this work, we develop a system called Mercury that uses a novel technique
    to compactly disseminate version information while still protecting against
    rollback attacks. Due to a different technique for dealing with key
    revocation, users are protected from rollback attacks, even if the software
    repository is compromised. This technique is bandwidth-efficient,
    especially when delta compression is used to transmit only the
    differences between previous and current lists of version information.
    An analysis we performed for the Python community shows that once Mercury
    is deployed on PyPI, each user will only download metadata each month
    that is about 3.5% the size of an average package. Our work has been
    incorporated into the latest versions of TUF, which is being integrated by
    Haskell, OCaml, RubyGems, Python, and CoreOS, and is being used in
    production by LEAP, Flynn, and Docker."

  - &lind_usenix_17
    anchor: lind_usenix_17
    title: "Lock-in-Pop: Securing Privileged Operating System Kernels by Keeping on the Beaten Path"
    authors:
      - name: "Y. Li, B. Dolan-Gavitt, S. Weber, and J. Cappos"
    project: *lind
    booktitle: "The 2017 USENIX Annual Technical Conference (USENIX ATC 2017)"
    link: papers/li_lind_usenix_2017.pdf
    abstract: "Virtual machines (VMs) that try to isolate untrusted
code are widely used in practice. However, it is often
possible to trigger zero-day flaws in the host Operating
System (OS) from inside of such virtualized systems. In
this paper, we propose a new security metric showing
strong correlation between “popular paths” and kernel
vulnerabilities. We verify that the OS kernel paths accessed
by popular applications in everyday use contain
significantly fewer security bugs than less-used paths.
We then demonstrate that this observation is useful in
practice by building a prototype system which locks an
application into using only popular OS kernel paths. By
doing so, we demonstrate that we can prevent the triggering
of zero-day kernel bugs significantly better than
three other competing approaches, and argue that this is
a practical approach to secure system design."

  - &bender_sas_17
    anchor: bender_sas_17
    title: "Measuring the Fitness of Fitness Trackers"
    authors:
      - name: "C. Bender, J. Hoffstot, B. Combs, S. Hooshangi, and J. Cappos"
    project:
    booktitle: "IEEE Sensors Applications Symposium (SAS 2017)"
    link: /papers/bender_sas_17.pdf
    abstract: "Data collected by fitness trackers could play an important
role in improving the health and well-being of the individuals who wear
them. Many insurance companies even offer monetary rewards to participants
who meet certain steps or calorie goals. However, in order for it to be
useful, the collected data must be accurate and also reflect real-world
performance. While previous studies have compared step counts data in
controlled laboratory environments for limited periods of time, few studies
have been done to measure performance over longer periods of time, while
the subject does real-world activities. There are also few direct
comparisons of a range of health indicators on different fitness tracking
devices. In this study, we compared step counts, calories burned, and miles
travelled data collected by three pairs of fitness trackers over a 14-day
time period in free-living conditions. Our work indicates that the number
of steps reported by different devices worn simultaneously could vary as
much as 26%. At the same time, the variations seen in distance travelled,
based on the step count, followed the same trends. Little correlation was
found between the number of calories burned and the variations seen in the
step count across multiple devices. Our results demonstrate that the
reporting of health indicators, such as calories burned and miles
travelled, are heavily dependent on the device itself, as well as the
manufacturer’s proprietary algorithm to calculate or infer such data. As a
result, it is difficult to use such measurements as an accurate predictor
of health outcomes, or to develop a consistent criteria to rate the
performance of such devices in head-to-head comparisons."

  - &kuppusamy_uptane_design-17
    anchor: kuppusamy_uptane_design-17
    title: "Uptane Design Overview"
    authors:
      - name: "T.K. Kuppusamy, A. Brown, S. Awwad, D. McCoy, R. Bielawski, S. Weber, J. Liming, C. Mott, S. Lauzon, A. Weimerskirch, and J. Cappos"
    project: *uptane
    booktitle:
    year: "2017"
    link: "https://docs.google.com/document/d/1pBK--40BCg_ofww4GES0weYFB6tZRedAjUy6PJ4Rgzk/edit#heading=h.ertrftdz3oms"
    abstract: "This document presents the design of the Uptane secure software
    update protocol. This includes the high level design, rationale, and a
    rough security analysis."

  - &uptane_implementation_17
    anchor: uptane_implementation_17
    title: "Uptane Implementation Specification"
    authors:
      - name:
    project: *uptane
    booktitle:
    year: "2017"
    link: "https://docs.google.com/document/d/1wjg3hl0iDLNh7jIRaHl3IXhwm0ssOtDje5NemyTBcaw/edit#heading=h.l6lkvdudrui2"
    abstract: "This is the first of two documents designed to facilitate the
    design, implementation, and deployment of Uptane, a secure software update
    framework for automobiles. This document, the Implementation Specification,
    is intended to be read by the programmers of an OEM who wish to implement
    Uptane. Such an implementation will help ECUs on a vehicle to download,
    distribute, and verify software updates from an OEM repository in a
    compromise-resilient manner."

  - &uptane_deployment_17
    anchor: uptane_deployment_17
    title: "Uptane Deployment Considerations"
    authors:
      - name:
    project: *uptane
    booktitle:
    year: "2017"
    link: "https://docs.google.com/document/d/17wOs-T7mugwte5_Dt-KLGMsp-3_yAARejpFmrAMefSE/edit"
    abstract: "This instruction manual guides OEMs and suppliers on how to deploy and use Uptane in production.  Unlike the Implementation Specification, which describes the way to build an Uptane-compliant client, or the design document, which explains the rationale behind Uptane, the high level goal of this document is to explain how to setup, operate, integrate, and adapt Uptane to work in a variety of environments."

  - &kuppusamy_escar_16
    anchor: kuppusamy_escar_16
    title: "Uptane: Securing Software Updates for Automobiles"
    authors:
      - name: "T.K. Kuppusamy, A. Brown, and S.Awwad, D. McCoy, R. Bielawski, C. Mott, S. Lauzon, A. Weimerskirch, and J. Cappos"
    project: *uptane
    booktitle: "14th Embedded Security in Cars Conference (escar 2016)"
    year:
    link: "/papers/kuppusamy_escar_16.pdf"
    abstract: "Software update systems for automobiles can deliver significant
benefits, but, if not implemented carefully, they could potentially
incur serious security vulnerabilities. Previous solutions for securing
software updates consider standard attacks and deploy widely
understood security mechanisms, such as digital signatures for the
software updates, and hardware security modules (HSM) to sign
software updates. However, no existing solution considers more
advanced security objectives, such as resilience against a repository
compromise, or freeze attacks to the vehicle's update mechanism,
or a compromise at a supplier's site. Solutions developed
for the PC world do not generalize to automobiles for two reasons:
first, they do not solve problems that are unique to the automotive
industry (e.g., that there are many different types of computers
to be updated on a vehicle), and second, they do not address
security attacks that can cause a vehicle to fail (e.g. a man-in-the-middle
attack without compromising any signing key) or that can
cause a vehicle to become unsafe. In this paper, we present Uptane,
the first software update framework for automobiles that counters
a comprehensive array of security attacks, and is resilient to partial
compromises. Uptane adds strategic features to the state-of-the-art
software update framework, TUF, in order to address automotivespecific
vulnerabilities and limitations. Uptane is flexible and easy
to adopt, and its design details were developed together with the
main automotive industry stakeholders in the USA."

  - &torres_toto_usenixsec-2016
    anchor: torres_toto_usenixsec-2016
    title: "On omitting commits and committing omissions: Preventing git metadata tampering that (re) introduces software vulnerabilities"
    authors:
      - name: "S. Torres-Arias, A. Ammula, R. Curtmola, and J. Cappos"
    project: *in-toto
    booktitle: "25th USENIX Security Symposium (USENIX Sec 2016)"
    volume: "16"
    pages: "10-12"
    year:
    link: "/papers/torres_toto_usenixsec-2016.pdf"
    abstract: "Metadata manipulation attacks represent a new threat
class directed against Version Control Systems, such as
the popular Git. This type of attack provides inconsistent
views of a repository state to different developers,
and deceives them into performing unintended operations
with often negative consequences. These include
omitting security patches, merging untested code into a
production branch, and even inadvertently installing software
containing known vulnerabilities. To make matters
worse, the attacks are subtle by nature and leave no trace
after being executed.
We propose a defense scheme that mitigates these attacks
by maintaining a cryptographically-signed log of
relevant developer actions. By documenting the state
of the repository at a particular time when an action is
taken, developers are given a shared history, so irregularities
are easily detected. Our prototype implementation
of the scheme can be deployed immediately as it is
backwards compatible and preserves current workflows
and use cases for Git users. An evaluation shows that
the defense adds a modest overhead while offering significantly
stronger security. We performed responsible
disclosure of the attacks and are working with the Git
community to fix these issues in an upcoming version of
Git."

  - &kuppusamy_nsdi_16
    anchor: kuppusamy_nsdi_16
    title: "Diplomat: Using Delegations to Protect Community Repositories"
    authors:
      - name: "T. Kuppusamy, S. Torres-Arias, V. Diaz, and J. Cappos"
    project: *tuf
    booktitle: "13th USENIX Symposium on Networked Systems Design and Implementation (NSDI 16)"
    year:
    isbn: "978-1-931971-29-4"
    address:
    pages: "567--581"
    publisher: "USENIX Association"
    link: "/papers/kuppusamy_nsdi_16.pdf"
    abstract: "Community repositories, such as Docker Hub, PyPI, and RubyGems,
are bustling marketplaces that distribute software. Even though these repositories
use common software signing techniques (e.g., GPG and TLS), attackers can
still publish malicious packages after a server compromise. This is mainly
because a community repository must have immediate access to signing keys in order
to certify the large number of new projects that are registered each day.

This work demonstrates that community repositories can offer compromise-resilience
and real-time project registration by employing mechanisms that disambiguate trust delegations.
This is done through two delegation mechanisms that provide flexibility in the
amount of trust assigned to different keys. Using this idea we implement Diplomat,
a software update framework that supports security models with different security / usability tradeoffs.
By leveraging Diplomat, a community repository can achieve near-perfect compromise-resilience
while allowing real-time project registration. For example, when Diplomat is deployed
and configured to maximize security on Python's community repository, less than 1%
of users will be at risk even if an attacker controls the repository and is
undetected for a month. Diplomat is being integrated by Ruby, CoreOS, Haskell,
OCaml, and Python, and has already been deployed by Flynn, LEAP, and Docker."

  - &dev-pep-2016
    anchor: dev-pep-2016
    title: "PEP 480—Surviving a Compromise of PyPI: The Maximum Security Model"
    authors:
      - name: "T. Kuppusamy, V. Diaz, D. Stuffit, and J. Cappos"
    year: "2016"
    institution: "Python Enhancement Proposal"
    link: "https://www.python.org/dev/peps/pep-0480/"
    abstract: "Proposed is an extension to PEP 458 that adds support for end-to-end signing and the maximum security model. End-to-end signing allows both PyPI and developers to sign for the distributions that are downloaded by clients. The minimum security model proposed by PEP 458 supports continuous delivery of distributions (because they are signed by online keys), but that model does not protect distributions in the event that PyPI is compromised. In the minimum security model, attackers may sign for malicious distributions by compromising the signing keys stored on PyPI infrastructure. The maximum security model, described in this PEP, retains the benefits of PEP 458 (e.g., immediate availability of distributions that are uploaded to PyPI), but additionally ensures that end-users are not at risk of installing forged software if PyPI is compromised.

This PEP discusses the changes made to PEP 458 but excludes its informational elements to primarily focus on the maximum security model. For example, an overview of The Update Framework or the basic mechanisms in PEP 458 are not covered here. The changes to PEP 458 include modifications to the snapshot process, key compromise analysis, auditing snapshots, and the steps that should be taken in the event of a PyPI compromise. The signing and key management process that PyPI MAY RECOMMEND is discussed but not strictly defined. How the release process should be implemented to manage keys and metadata is left to the implementors of the signing tools. That is, this PEP delineates the expected cryptographic key type and signature format included in metadata that MUST be uploaded by developers in order to support end-to-end verification of distributions."

  - &li-usenix-fence-2015
    anchor: li-usenix-fence-2015
    title: "Fence: Protecting Device Availability With Uniform Resource Control"
    authors:
      - name: "T. Li, A. Rafetseder, R. Fonseca, and J. Cappos"
    project: *seattle
    booktitle: "2015 USENIX Annual Technical Conference (USENIX ATC 15)"
    year:
    isbn: "978-1-931971-225"
    address:
    pages: "177--191"
    publisher: "USENIX Association"
    link: "/papers/li-usenix-fence-2015.pdf"
    abstract: "Applications such as software updaters or a run-away web
app, even if low priority, can cause performance degradation,
loss of battery life, or other issues that reduce a
computing device's availability. The core problem is that
OS resource control mechanisms unevenly apply uncoordinated
policies across different resources. This paper shows how handling resources - e.g., CPU, memory, sockets,
and bandwidth - in coordination, through a unifying
abstraction, can be both simpler and more effective. We
abstract resources along two dimensions of fungibility
and renewability, to enable resource-agnostic algorithms
to provide resource limits for a diverse set of applications.
We demonstrate the power of our resource abstraction
with a prototype resource control subsystem, Fence,
which we implement for two sandbox environments running
on a wide variety of operating systems (Windows,
Linux, the BSDs, Mac OS X, iOS, Android, OLPC, and
Nokia) and device types (servers, desktops, tablets, laptops,
and smartphones). We use Fence to provide systemwide
protection against resource hogging processes that
include limiting battery drain, preventing overheating,
and isolating performance. Even when there is interference,
Fence can double the battery life and improve the
responsiveness of other applications by an order of magnitude.
Fence is publicly available and has been deployed
in practice for five years, protecting tens of thousands of
users."

  - &torres_toto_usenixsec-2016
    anchor: torres_toto_usenixsec-2016
    title: "On omitting commits and committing omissions: Preventing git metadata tampering that (re) introduces software vulnerabilities"
    authors:
      - name: "S. Torres-Arias, A. Ammula, R. Curtmola, and J. Cappos"
    project: *in-toto
    booktitle: "25th USENIX Security Symposium, (USENIX Sec 2016)"
    volume: "16"
    pages: "10-12"
    year:
    link: "/papers/torres_toto_usenixsec-2016.pdf"
    abstract: "Metadata manipulation attacks represent a new threat
class directed against Version Control Systems, such as
the popular Git. This type of attack provides inconsistent
views of a repository state to different developers,
and deceives them into performing unintended operations
with often negative consequences. These include
omitting security patches, merging untested code into a
production branch, and even inadvertently installing software
containing known vulnerabilities. To make matters
worse, the attacks are subtle by nature and leave no trace
after being executed.
We propose a defense scheme that mitigates these attacks
by maintaining a cryptographically-signed log of
relevant developer actions. By documenting the state
of the repository at a particular time when an action is
taken, developers are given a shared history, so irregularities
are easily detected. Our prototype implementation
of the scheme can be deployed immediately as it is
backwards compatible and preserves current workflows
and use cases for Git users. An evaluation shows that
the defense adds a modest overhead while offering significantly
stronger security. We performed responsible
disclosure of the attacks and are working with the Git
community to fix these issues in an upcoming version of
Git."

  - &kuppusamy_nsdi_16
    anchor: kuppusamy_nsdi_16
    title: "Diplomat: Using Delegations to Protect Community Repositories"
    authors:
      - name: "T. Kuppusamy, S. Torres-Arias, V. Diaz, and J. Cappos"
    project: *tuf
    booktitle: "13th USENIX Symposium on Networked Systems Design and Implementation (NSDI 16)"
    year:
    isbn: "978-1-931971-29-4"
    address:
    pages: "567--581"
    publisher: "USENIX Association"
    link: "/papers/kuppusamy_nsdi_16.pdf"
    abstract: "Community repositories, such as Docker Hub, PyPI, and RubyGems, are bustling marketplaces that distribute software. Even though these repositories use common software signing techniques (e.g., GPG and TLS), attackers can still publish malicious packages after a server compromise. This is mainly because a community repository must have immediate access to signing keys in order to certify the large number of new projects that are registered each day.

This work demonstrates that community repositories can offer compromise-resilience and real-time project registration by employing mechanisms that disambiguate trust delegations. This is done through two delegation mechanisms that provide flexibility in the amount of trust assigned to different keys. Using this idea we implement Diplomat, a software update framework that supports security models with different security / usability tradeoffs. By leveraging Diplomat, a community repository can achieve near-perfect compromise-resilience while allowing real-time project registration. For example, when Diplomat is deployed and configured to maximize security on Python's community repository, less than 1% of users will be at risk even if an attacker controls the repository and is undetected for a month. Diplomat is being integrated by Ruby, CoreOS, Haskell, OCaml, and Python, and has already been deployed by Flynn, LEAP, and Docker."

  - &Peddinti_ICWSM_2016
    anchor: Peddinti_ICWSM_2016
    title: "Finding Sensitive Accounts on Twitter: An Automated Approach Based on Follower Anonymity"
    authors:
      - name: "S.T. Peddinti, K.W. Ross, and J. Cappos"
    booktitle: "Tenth International AAAI Conference on Web and Social Media (ICWSM 16)"
    year:
    link: "/papers/Peddinti_ICWSM_2016.pdf"
    abstract: "We explore the feasibility of automatically finding accounts that publish sensitive content on Twitter, by examining the percentage of anonymous and identifiable followers the accounts have. We first designed a machine learning classifier to automatically determine if a Twitter account is anonymous or identifiable. We then classified an account as potentially sensitive based on the percentages of anonymous and identifiable followers the account has. We applied our approach to approximately 100,000 accounts with 404 million active followers. The approach uncovered accounts that were sensitive for a diverse number of reasons."
    eprint: "arXiv:1702.00164"

  - &li-usenix-fence-2015
    anchor: li-usenix-fence-2015
    title: "Fence: Protecting Device Availability with Uniform Resource Control"
    authors:
      - name: "T. Li, A. Rafetseder, R. Fonseca, and J. Cappos"
    project: *seattle
    booktitle: "2015 USENIX Annual Technical Conference (USENIX ATC 15)"
    year:
    isbn: "978-1-931971-225"
    address:
    pages: "177--191"
    publisher: "USENIX Association"
    link: "/papers/li-usenix-fence-2015.pdf"
    abstract: "Applications such as software updaters or a run-away web
app, even if low priority, can cause performance degradation,
loss of battery life, or other issues that reduce a
computing device's availability. The core problem is that
OS resource control mechanisms unevenly apply uncoordinated
policies across different resources. This paper
shows how handling resources - e.g., CPU, memory, sockets,
and bandwidth - in coordination, through a unifying
abstraction, can be both simpler and more effective. We
abstract resources along two dimensions of fungibility
and renewability, to enable resource-agnostic algorithms
to provide resource limits for a diverse set of applications.
We demonstrate the power of our resource abstraction
with a prototype resource control subsystem, Fence,
which we implement for two sandbox environments running
on a wide variety of operating systems (Windows,
Linux, the BSDs, Mac OS X, iOS, Android, OLPC, and
Nokia) and device types (servers, desktops, tablets, laptops,
and smartphones). We use Fence to provide systemwide
protection against resource hogging processes that
include limiting battery drain, preventing overheating,
and isolating performance. Even when there is interference,
Fence can double the battery life and improve the
responsiveness of other applications by an order of magnitude.
Fence is publicly available and has been deployed
in practice for five years, protecting tens of thousands of
users"

  - &wang_uppir_globecom2015
    anchor: wang_uppir_globecom2015
    title: "A Fast Multi-Server, Multi-Block Private Information Retrieval Protocol"
    authors:
      - name: "L. Wang, T. Kuppusamy, Y. Liu, and J. Cappos"
    project: *uppir
    booktitle: "IEEE GLOBECOM 2015 Conference (GLOBECOM 2015)"
    year:
    pages: "484-495"
    keywords: "application program interfaces;program debugging;program testing;software portability;CheckAPI;JavaScript;POSIX;Seattle project Repy VM;application code;cross-platform portability violation detection;latent cross-platform API violation detection;operating system;partial specification-based API implementation;portability bugs;Computer bugs;Libraries;Operating systems;Runtime;Sockets;Testing"
    month: "Nov"
    link: "/papers/wang_globecom2015.pdf"
    abstract: "Private Information Retrieval (PIR) allows users
to retrieve information from a database without revealing
which information in the database was queried. The traditional
information-theoretic PIR schemes utilize multiple servers to
download a single data block, thus incurring high communication
overhead and high computation burdens. In this paper,
we develop an information-theoretic multi-block PIR scheme
that significantly reduces client communication and computation
overheads by downloading multiple data blocks at a time. The
design of k-safe binary matrices insures the information will not
be revealed even if up to k servers collude. Our scheme has much
lower overhead than classic PIR schemes. The implementation of
fast XOR operations benefits both servers and clients in reducing
coding and decoding time. Our work demonstrates that multiblock
PIR scheme can be optimized to simultaneously achieve
low communication and computation overhead, comparable to
even non-PIR systems, while maintaining a high level of privacy."

  - &rasley_checkapi_issre2015
    anchor: rasley_checkapi_issre2015
    title: "Detecting Latent Cross-platform API Violations"
    authors:
      - name: "J. Rasley, E. Gessiou, T. Ohmann, Y. Brun, S. Krishnamurthi and J. Cappos"
    project: *seattle
    booktitle: "2015 IEEE 26th International Symposium on Software Reliability Engineering (ISSRE 2015)"
    year:
    pages: "484-495"
    keywords: "application program interfaces;program debugging;program testing;software portability;CheckAPI;JavaScript;POSIX;Seattle project Repy VM;application code;cross-platform portability violation detection;latent cross-platform API violation detection;operating system;partial specification-based API implementation;portability bugs;Computer bugs;Libraries;Operating systems;Runtime;Sockets;Testing"
    month: "Nov"
    link: "/papers/rasley_checkapi_issre2015.pdf"
    abstract: "Many APIs enable cross-platform system development
by abstracting over the details of a platform, allowing
application developers to write one implementation that will run
on a wide variety of platforms. Unfortunately, subtle differences
in the behavior of the underlying platforms make cross-platform
behavior difficult to achieve. As a result, applications using these
APIs can be plagued by bugs difficult to observe before deployment.
These portability bugs can be particularly difficult to
diagnose and fix because they arise from the API implementation,
the operating system, or hardware, rather than application code.
This paper describes CheckAPI, a technique for detecting
violations of cross-platform portability. CheckAPI compares an
application's interactions with the API implementation to its interactions
with a partial specification-based API implementation,
and does so efficiently enough to be used in real production
systems and at runtime. CheckAPI finds latent errors that escape
pre-release testing. This paper discusses the subtleties of different
kinds of API calls and strategies for effectively producing the
partial implementations. Validating CheckAPI on JavaScript,
the Seattle project's Repy VM, and POSIX detects dozens of
violations that are confirmed bugs in widely-used software."

  - &hooshangi_sigcse15
    anchor: hooshangi_sigcse15
    title: "Can the Security Mindset Make Students Better Testers?"
    authors:
      - name: "S. Hooshangi, R. Weiss, and J. Cappos"
    booktitle: "Proceedings of the 46th ACM Technical Symposium on Computer Science Education (SIGCSE '15)"
    project: *seattle
    series:
    year:
    isbn: "978-1-4503-2966-8"
    location:
    pages: "404--409"
    numpages: "6"
    acmid: "2677268"
    publisher: "ACM"
    address:
    keywords: "access control, python, security, testing"
    link: "/papers/hooshangi_sigcse15.pdf"
    abstract: "Writing secure code requires a programmer to think both as a defender and an attacker. One can draw a parallel between this model of thinking and techniques used in test-driven development, where students learn by thinking about how to effectively test their code and anticipate possible bugs. In this study, we analyzed the quality of both attack and defense code that students wrote for an assignment given in an introductory security class of 75 (both graduate and senior undergraduate levels) at NYU. We made several observations regarding students' behaviors and the quality of both their defensive and offensive code. We saw that student defensive programs (i.e., assignments) are highly unique and that their attack programs (i.e., test cases) are also relatively unique. In addition, we examined how student behaviors in writing defense programs correlated with their attack program's effectiveness. We found evidence that students who learn to write good defensive programs can write effective attack programs, but the converse is not true. While further exploration of causality is needed, our results indicate that a greater pedagogical emphasis on defensive security may benefit students more than one that emphasizes offense."

  - &weiss_trustcom2015
    anchor: weiss_trustcom2015
    title: "Trust Evaluation in Mobile Devices: An Empirical Study"
    authors: "R. Weiss, L. Reznik, Y. Zhuang, A. Hoffman, D. Pollard, A. Rafetseder, T. Li, and J. Cappos"
    project: *sensibility
    booktitle: "2015 IEEE Trustcom/BigDataSE/ISPA"
    year: "2015"
    volume: "1"
    pages: "25-32"
    keywords: "Android (operating system);expert systems;mobile computing;power aware computing;program verification;resource allocation;smart phones;system monitoring;trusted computing;voltage measurement;Android smartphone;Android-based smartphones;CPU utilization;GPS location;OBD sensor;anomalous behavior detection;battery voltage measurement;expert rule system;hierarchical trust evaluation methodology;mobile devices;network communication;onboard diagnostics sensor;resource consumption patterns;resource utilization monitoring;tablets;trust metrics;trust verification;trustworthiness evaluation;Computer science;Electronic mail;Measurement;Privacy;Security;Smart phones;mobile computing;security;trust metrics"
    link: "/papers/weiss_trustcom2015.pdf"
    month: "Aug"
    abstract: "Mobile devices today, such as smartphones and tablets, have become both more complex and diverse. This paper presents a framework to evaluate the trustworthiness of the individual components in a mobile system, as well as the entire system. The major components are applications, devices and networks of devices. Given this diversity and multiple levels of a mobile system, we develop a hierarchical trust evaluation methodology, which enables the combination of trust metrics and allows us to verify the trust metric for each component based on the trust metrics for others. The paper first demonstrates this idea for individual applications and Android-based smartphones. The methodology involves two stages: initial trust evaluation and trust verification. In the first stage, an expert rule system is used to produce trust metrics at the lowest level of the hierarchy. In the second stage, the trust metrics are verified by comparing data from components and a trust evaluation is produced for the combined system. This paper presents the results of two empirical studies, in which this methodology is applied and tested. The first study involves monitoring resource utilization and evaluating trust based on resource consumption patterns. We measured battery voltage, CPU utilization and network communication for individual apps and detected anomalous behavior that could be indicative of malicious code. The second study involves verification of the trust evaluation by comparing the data from two different devices: the GPS location from an Android smartphone in an automobile and the data from an on-board diagnostics (OBD) sensor of the same vehicle."


#  JAC: Poster
#  - &sensibility-testbed
#    anchor: sensibility-testbed
#    title: "Sensibility testbed: An internet-wide cloud platform for programmable exploration of mobile devices"
#    authors:
#      - name: "Y. Zhuang and L. Law and A. Rafetseder and L. Wang and I. Beschastnikh and J. Cappos"
#    project: *sensibility
#    booktitle: "2014 IEEE Conference on Computer Communications Workshops (INFOCOM WKSHPS)"
#    year: "2014"
#    pages: "139-140"
#    keywords: "cellular radio;computer network security;data privacy;mobile computing;smart phones;wireless LAN;Internet-wide cloud platform;WiFi networks;cellular networks;community-driven platform;coverage measurement;performance measurement;programmable exploration;secure data access;sensibility testbed;user behavioral patterns;user privacy preservation;user-owned mobile devices;Access control;Data privacy;Mobile communication;Monitoring;Sensors;Smart phones"
#    link: "http://ieeexplore.ieee.org/document/6849194/"
#    month: "April"
#    abstract: "Smartphones contain sensors that provide information about the user of the device. Studying smartphones, therefore, provides an invaluable window into the behavioral patterns of users. In this work, we describe an open infrastructure that provides research communities with principled access to mobile devices and their sensors. Our platform, the Sensibility Testbed, is a free, community-driven platform for mobile devices. It provides secure data access to user-owned mobile devices while preserving user privacy. The unified programmable interface to sensors on heterogeneous devices in the Sensibility Testbed enables research scientists to design and deploy experiments that run across large numbers of devices, for example to measure the coverage and performance of cellular and WiFi networks. The Sensibility Testbed makes the sensing capabilities of smartphones more accessible to a broad range of researchers."

  - &cappos_blursense_sas_14
    anchor: cappos_blursense_sas_14
    title: "BlurSense: Dynamic fine-grained access control for smartphone privacy"
    authors:
      - name: "J. Cappos, L. Wang, R. Weiss, Y. Yang, and Y. Zhuang"
    project: *sensibility
    booktitle: "IEEE Sensors Applications Symposium (SAS 2014)"
    year:
    pages: "329-332"
    keywords: "authorisation;data privacy;sensors;smart phones;BlurSense;dynamic fine-grained access control;embedded on-board sensors;flexible access control mechanism;mobile applications;smartphone privacy filter;tablets;untrusted apps;Androids;Humanoid robots;Mobile communication;Monitoring;Privacy;Security;Sensors;Sensor access control;data filtering;privacy"
    month: "Feb"
    link: "/papers/cappos_blursense_sas_14.pdf"
    abstract: "For many people, smartphones serve as a technical interface to the modern world. These smart devices have embedded on-board sensors, such as accelerometers, gyroscopes, GPS sensors, and cameras, which can be used to develop new mobile applications. However, the sensors also pose privacy risks to users. This work describes BlurSense, a tool that provides secure and customizable access to all of the sensors on smartphones, tablets, and similar end user devices. The current access control to the smartphone resources, such as sensor data, is static and coarse-grained. BlurSense is a dynamic, fine-grained, flexible access control mechanism, acting as a line of defense that allows users to define and add privacy filters. As a result, the user can expose filtered sensor data to untrusted apps, and researchers can collect data in a way that safeguards users' privacy."

  - &reininger_sensevis_sas15
    anchor: reininger_sensevis_sas15
    title: "A First Look at Vehicle Data Collection via Smartphone Sensors"
    authors:
      - name: "M. Reininger, S. Miller, Y. Zhuang, and J. Cappos"
    project: *sensibility
    booktitle: "2015 IEEE Sensors Applications Symposium (SAS 2015)"
    year:
    pages: "1-6"
    keywords: "on-board communications;smart phones;vehicles;wireless LAN;WiFi on-board diagnostics sensor;data collection;mobile computing platform;moving vehicles;offline analysis;real-time analysis;smartphone sensors;tablets;vehicle data collection;visualization tools;Data collection;IEEE 802.11 Standards;Prototypes;Security;Sensors;Servers;Vehicles;Smartphone sensors;data visualization and analysis;vehicular networks"
    month: "April"
    link: "/papers/reininger_sensevis_sas15.pdf"
    abstract: "Smartphones serve as a technical interface to the outside world. These devices have embedded, on-board sensors (such as accelerometers, WiFi, and GPSes) that can provide valuable information for investigating users' needs and behavioral patterns. Similarly, computers that are embedded in vehicles are capable of collecting valuable sensor data that can be accessed by smartphones through the use of On-Board Diagnostics (OBD) sensors. This paper describes a prototype of a mobile computing platform that provides access to vehicles' sensors by using smartphones and tablets, without compromising these devices' security. Data such as speed, engine RPM, fuel consumption, GPS locations, etc. are collected from moving vehicles by using a WiFi On-Board Diagnostics (OBD) sensor, and then backhauled to a remote server for both real-time and offline analysis. We describe the design and implementation details of our platform, for which we developed a library for in-vehicle sensor access and created a non-relational database for scalable backend data storage. We propose that our data collection and visualization tools are useful for analyzing driving behaviors; we also discuss future applications, security, and privacy concerns specific to vehicular networks."

  - &zhuang_sensibility_login_2015
    anchor: zhuang_sensibility_login_2015
    title: "Privacy-Preserving Experimentation with Sensibility Testbed"
    authors:
      - name: "Y. Zhuang, A. Rafetseder, J. Cappos"
    project: *sensibility
    booktitle: ";login"
    year: "2015"
    link: "/papers/zhuang_sensibility_login_2015.pdf"
    publisher: "USENIX.org"
    abstract:

  - &martins-atc15-camera
    anchor: martins-atc15-camera
    title: "Selectively Taming Background Android Apps to Improve Battery Lifetime"
    authors:
      - name: "M. Martins, J. Cappos, and R. Fonseca"
    project: *seattle
    booktitle: "2015 USENIX Annual Technical Conference (USENIX ATC 15)"
    year:
    isbn: "978-1-931971-225"
    address:
    pages: "563--575"
    link: "/papers/martins-atc15-camera.pdf"
    publisher: "USENIX Association"
    abstract: "Background activities on mobile devices can cause significant battery drain with little visibility or recourse to the user. They can range from useful but sometimes overly aggressive tasks, such as polling for messages or updates from sensors and online services, to outright bugs that cause resources to be held unnecessarily. In this paper we instrument the Android OS to characterize background activities that prevent the device from sleeping. We present TAMER, an OS mechanism that interposes on events and signals that cause task wakeups, and allows for their detailed monitoring, filtering, and rate-limiting. We demonstrate how TAMER can help reduce battery drain in scenarios involving popular Android apps with background tasks. We also show how TAMER can mitigate the effects of well-known energy bugs while maintaining most of the apps' functionality. Finally, we elaborate on how developers and users can devise their own application-control policies for TAMER to maximize battery lifetime."

  - &zhuang-tr-cse-2015-01
    anchor: zhuang-tr-cse-2015-01
    title: "Tsumiki: A Meta-Platform for Building your own Testbed"
    authors:
      - name: "J. Cappos, Y. Zhuang, A. Rafetseder, and I. Beschastnikh"
    year: "2015"
    institution: "Tech. rep. tr-cse-2015-0, NYU Polytechnic"
    link: "/papers/zhuang-tr-cse-2015-01.pdf"
    abstract: "New technologies sometimes result in disruptive changes
to the existing infrastructure. Without adequate foresight,
industry, academia, and government can be caught
flat-footed. In this work, we focus on the trends surrounding
home Internet bandwidth - the bandwidth required
by end user applications at home. As building and
managing last mile network infrastructure incurs substantial
cost, the foresight of such trends is necessary to
plan upgrades.
Using a bottom-up approach, we look at four potentially
disruptive technologies, including millimeter wave
wireless (mm-wave), the Internet of Things (IoT), Fog
Computing, and Software Defined Networking (SDN).
We examine use cases proposed by academia and industry,
delve into the bandwidth requirements for proposed
applications, and use this data to forecast future traffic
demands for typical home users. Our projections show
that bandwidth changes at end user devices will most
likely be driven by two of the above technologies: millimeter
wave wireless and Fog Computing. These technologies
not only change the peak bandwidth, but also
have noticeable secondary effects on bandwidth such as
increasing upload bandwidth use, improving flash crowd
tolerance, and increasing off-peak demand. While IoT
and SDN are important, innovative technologies, they
will not drastically alter the bandwidth usage patterns of
ordinary users at home. We hope that the data and recommendations
from this study can help business leaders
and policy makers get an early jump on emerging technologies
before they begin to shape the economy and society."

  - &peddinti_cosn_14
    anchor: peddinti_cosn_14
    title: "On the Internet, Nobody Knows You're a Dog: A Twitter Case Study of Anonymity in Social Networks"
    authors:
      - name: "S.T. Peddinti,  K.W. Ross, and J. Cappos"
    booktitle: "Proceedings of the Second ACM Conference on Online Social Networks (COSN '14)"
    series:
    year:
    isbn: "978-1-4503-3198-2"
    location: "Dublin, Ireland"
    pages: "83--94"
    numpages: "12"
    link: "/papers/peddenti_cosn_14.pdf"
    acmid: "2660467"
    publisher: "ACM"
    address:
    keywords: "anonymity, behavioral analysis, online social networks, quantify, twitter"
    abstract: "Twitter does not impose a Real-Name policy for usernames, giving users the freedom to choose how they want to be identified. This results in some users being Identifiable (disclosing their full name) and some being Anonymous (disclosing neither their first nor last name).

In this work we perform a large-scale analysis of Twitter to study the prevalence and behavior of Anonymous and Identifiable users. We employ Amazon Mechanical Turk (AMT) to classify Twitter users as Highly Identifiable, Identifiable, Partially Anonymous, and Anonymous. We find that a significant fraction of accounts are Anonymous or Partially Anonymous, demonstrating the importance of Anonymity in Twitter. We then select several broad topic categories that are widely considered sensitive--including pornography, escort services, sexual orientation, religious and racial hatred, online drugs, and guns--and find that there is a correlation between content sensitivity and a user's choice to be anonymous. Finally, we find that Anonymous users are generally less inhibited to be active participants, as they tweet more, lurk less, follow more accounts, and are more willing to expose their activity to the general public. To our knowledge, this is the first paper to conduct a large-scale data-driven analysis of user anonymity in online social networks."

  - &zhuang_netcheck_nsdi_14
    anchor: zhuang_netcheck_nsdi_14
    title: "NetCheck: Network Diagnoses from Blackbox Traces"
    authors:
      - name: "Y. Zhuang, E. Gessiou, S. Portzer, F. Fund, M. Muhammad, I. Beschastnikh, and J. Cappos"
    project: *netcheck
    booktitle: "11th USENIX Symposium on Networked Systems Design and Implementation (NSDI 14)"
    year:
    isbn: "978-1-931971-09-6"
    address:
    pages: "115--128"
    link: "/papers/zhuang_netcheck_nsdi_14.pdf"
    publisher: "USENIX Association"
    abstract: "This paper introduces NetCheck, a tool designed to diagnose network problems in large and complex applications. NetCheck relies on blackbox tracing mechanisms, such as strace, to automatically collect sequences of network system call invocations generated by the application hosts. NetCheck performs its diagnosis by (1) totally ordering the distributed set of input traces, and by (2) utilizing a network model to identify points in the totally ordered execution where the traces deviated from expected network semantics.

Our evaluation demonstrates that NetCheck is able to diagnose failures in popular and complex applications without relying on any application- or network-specific information. For instance, NetCheck correctly identified the existence of NAT devices, simultaneous network disconnection/ reconnection, and platform portability issues. In a more targeted evaluation, NetCheck correctly detects over 95% of the network problems we found from bug trackers of projects like Python, Apache, and Ruby. When applied to traces of faults reproduced in a live network, NetCheck identified the primary cause of the fault in 90% of the cases. Additionally, NetCheck is efficient and can process a GB-long trace in about 2 minutes."

  - &polypasswordhasher_TR
    anchor: polypasswordhasher_TR
    title: "PolyPasswordHasher: Protecting Passwords in the Event of a Password File Disclosure"
    authors:
      - name: "J. Cappos and S. Torres-Arias"
    project: *pph
    year: "2014"
    institution: "Technical report"
    link: "https://github.com/PolyPasswordHasher/PolyPasswordHasher/blob/master/academic-writeup/paper.pdf"
    abstract: "Over the years, we have witnessed various password-hash database breaches that have affected small and large companies, with a diversity of users and budgets. The industry standard, salted hashing (and even key stretching), has proven to be insufficient protection against attackers who now have access to clusters of GPU-powered password crackers. Although there are various proposals for better securing password storage, most do not offer the same adoption model (software-only, server-side) as salted hashing, which may impede adoption. In this paper, we present PolyPasswordHasher, a software-only, server-side password storage mechanism that requires minimal additional work for the server, but exponentially increases the attacker's effort. PolyPasswordHasher uses a threshold cryptosystem to interrelate stored password data so that passwords cannot be individually cracked. Our analysis shows that PolyPasswordHasher is memory and storage efficient, hard to crack, and easy to implement. In many realistic scenarios, cracking a PolyPasswordHasher-enabled database would be infeasible even for an adversary with millions of computers."

  - &cappos_refmonitor_sigcse_14
    anchor: cappos_refmonitor_sigcse_14
    title: "Teaching the Security Mindset with Reference Monitors"
    authors:
      - name: "J. Cappos and R. Weiss"
    project: *seattle
    booktitle: "Proceedings of the 45th ACM Technical Symposium on Computer Science Education (SIGCSE '14)"
    series:
    year:
    isbn: "978-1-4503-2605-6"
    location:
    pages: "523--528"
    numpages: "6"
    url: "http://doi.acm.org/10.1145/2538862.2538939"
    doi: "10.1145/2538862.2538939"
    acmid: "2538939"
    publisher: "ACM"
    address:
    link: "/papers/cappos_refmonitor_sigcse_14.pdf"
    keywords: "experience report, laboratory experience, privacy, security"
    abstract: "One of the central skills in computer security is reasoning about how programs fail. As a result, computer security necessarily involves thinking about the corner cases that arise when software executes. An unfortunate side effect of this is that computer security assignments typically necessitate deep understanding of a topic, such as how the stack is laid out in memory or how web applications interact with databases. This work presents a series of assignments that require very little background knowledge from students, yet provide them with the ability to reason about failures in programs. In this set of assignments, students implement two very simple programs in a high-level language (Python). Students first implement a reference monitor that tries to uphold a security property within a sandbox. For the second portion, the students are provided each others' reference monitors and then write attack code to try to bypass the reference monitors. By leveraging a Python-based sandbox, student code is isolated cleanly, which simplifies development and grading. These assignments have been used in about a dozen classes in a range of environments, including a research university, online classes, and a four year liberal arts school. Student and instructor feedback has been overwhelmingly positive. Furthermore, survey results demonstrate that after a 2-3 week module, 76% of the students who did not understand reference monitors and access control learned these key security concepts."

  - &oliveira_puzzles_acsac_2014
    anchor: oliveira_puzzles_acsac_2014
    title: "It's the Psychology Stupid: How Heuristics Explain Software Vulnerabilities and How Priming Can Illuminate Developer's Blind Spots"
    authors:
      - name: "D. Oliveira, M. Rosenthal, N. Morin, K-C Yeh, J. Cappos, and Y. Zhuang"
    project: *blindspots
    booktitle: "Proceedings of the 30th Annual Computer Security Applications Conference (ACSAC '14)"
    series:
    year:
    isbn: "978-1-4503-3005-3"
    location:
    pages: "296--305"
    numpages: "10"
    link: "/papers/oliveira_puzzles_acsac_2014.pdf"
    acmid: "2664254"
    publisher: "ACM"
    address:
    abstract: "Despite the security community's emphasis on the importance of building secure software, the number of new vulnerabilities found in our systems is increasing. In addition, vulnerabilities that have been studied for years are still commonly reported in vulnerability databases. This paper investigates a new hypothesis that software vulnerabilities are blind spots in developer's heuristic-based decision-making processes. Heuristics are simple computational models to solve problems without considering all the information available. They are an adaptive response to our short working memory because they require less cognitive effort. Our hypothesis is that as software vulnerabilities represent corner cases that exercise unusual information flows, they tend to be left out from the repertoire of heuristics used by developers during their programming tasks.

To validate this hypothesis we conducted a study with 47 developers using psychological manipulation. In this study each developer worked for approximately one hour on six vulnerable programming scenarios. The sessions progressed from providing no information about the possibility of vulnerabilities, to priming developers about unexpected results, and explicitly mentioning the existence of vulnerabilities in the code. The results show that (i) security is not a priority in software development environments, (ii) security is not part of developer's mindset while coding, (iii) developers assume common cases for their code, (iv) security thinking requires cognitive effort, (v) security education helps, but developers can have difficulties correlating a particular learned vulnerability or security information with their current working task, and (vi) priming or explicitly cueing about vulnerabilities on-the-spot is a powerful mechanism to make developers aware about potential vulnerabilities."

  - &cappos_nspw_2014
    anchor: cappos_nspw_2014
    title: "Vulnerabilities as Blind Spots in Developer's Heuristic-Based Decision-Making Processes"
    authors:
      - name: "J. Cappos, Y. Zhuang, D. Oliveira, N. Rosenthal, and K-C Yeh"
    project: *blindspots
    booktitle: "Proceedings of the 2014 New Security Paradigms Workshop (NSPW '14')"
    series:
    year:
    isbn: "978-1-4503-3062-6"
    location:
    pages: "53--62"
    numpages: "10"
    link: "/papers/cappos_nspw_2014.pdf"
    acmid: "2683472"
    publisher: "ACM"
    address:
    keywords: "api, automated checker, blind spots, cueing, heuristics, puzzles, vulnerabilities"
    abstract: "The security community spares no effort in emphasizing security awareness and the importance of building secure software. However, the number of new vulnerabilities found in today's systems is still increasing. Furthermore, old and well-studied vulnerability types such as buffer overflows and SQL injections, are still repeatedly reported in vulnerability databases. Historically, the common response has been to blame the developers for their lack of security education. This paper discusses a new hypothesis to explain this problem by introducing a new security paradigm where software vulnerabilities are viewed as developers' blind spots in their decision making. We argue that such a flawed mental process is heuristic-based, where humans solve problems without considering all the information available, just like taking shortcuts. This paper's thesis is that security thinking tends to be left out by developers during their programming, as vulnerabilities usually exist in corner cases with unusual information flows. Leveraging this paradigm, this paper introduces a novel methodology for capturing and understanding security-related blind spots in Application Programming Interfaces (APIs). Finally, it discusses how this methodology can be applied to the design and implementation of the next generation of automated diagnosis tools."

  - &torres_pph_login_2014
    anchor: torres_pph_login_2014
    title: "PolyPasswordHasher: Improving Password Storage Security"
    authors:
      - name: "S. Torres and J. Cappos"
    project: *pph
    booktitle: ";login"
    year: "2014"
    link: "/papers/torres_pph_login_2014.pdf"
    publisher: "USENIX.org"
    abstract:

  - &mueller_tomato_pik_14
    anchor: mueller_tomato_pik_14
    title: "ToMaTo: A Virtual Research Environment for Large Scale Distributed Systems research"
    authors:
      - name: "P. Mueller, D. Schwerdel, and J. Cappos"
    project:
    booktitle: "PIK"
    year: "2014"
    link: "/papers/mueller_tomato_pik_14.pdf"
    publisher:
    abstract: "Networks and distributed systems are an important
field of research. To enable experimental research in
this field we propose a new tool ToMaTo (Topology Management
Tool) which was developed to support research
projects within the BMBF funded project G-Lab. It should
support researchers from various branches of science who
investigate distributed systems by providing a virtual environment
for their research.
Using various virtualization technologies, ToMaTo is
able to provide realistic components that can run realworld
software as well as lightweight components that can
be used to analyze algorithms at large scale.
This paper describes how an additional virtualization
technology from the Seattle testbed has been added to
ToMaTo to allow even larger experiments with distributed
algorithms. Moreover the paper describes some concrete
experiments that are carried out with ToMaTo."

  - &tr-cse-2013-03
    anchor: tr-cse-2013-03
    title: "NetCheck Test Cases: Input Traces and NetCheck Output"
    authors:
      - name: "J. Cappos, Y. Zhuang, and I. Beschastnikh"
    project: *netcheck
    link: "/papers/tr-cse-2013-03.pdf"
    year: "2013"
    abstract: "Application failures due to network issues are some of the most difficult to diagnose
and debug. This is because the failure may be due to in-network state or
state maintained by a remote end-host, both of which are invisible to an application
host. For instance, data may be dropped due to MTU issues [18], NAT
devices and firewalls introduce problems due to address changes and connection
blocking [11], default IPv6 options can cause IPv4 applications to fail [3],
and default buffer size settings can cause UDP datagrams to be dropped or
truncated [37].
This report presents the results of our work NetCheck [38]. In contrast
with most prior approaches, NetCheck does not require application- or networkspecific
knowledge to perform its diagnoses, and no modification to the application
or the infrastructure is necessary. NetCheck treats an application as a
blackbox and requires just a set of system call (syscall) invocation traces from
the relevant end-hosts. These traces can be easily collected at runtime with standard
blackbox tracing tools, such as strace. To perform its diagnosis, NetCheck
derives a global ordering of the input syscalls by simulating the syscalls against
a network model. The model is also used to identify those syscalls that deviate
from expected network semantics. These deviations are then mapped to a
diagnosis by using a set of heuristics."

  - &zhuang_seattle_gree
    anchor: zhuang_seattle_gree_13
    title: "Experience with Seattle: A Community Platform for Research and Education"
    authors:
      - name: "Y. Zhuang, A. Rafetseder and J. Cappos"
    project: *seattle
    booktitle: "Second GENI Research and Educational Experiment Workshop"
    year: "2013"
    pages: "37-44"
    keywords: "computer aided instruction;research and development;security of data;teaching;Seattle testbed;application performance;computational resource;education platform;educational standpoint;research platform;teaching tool;user security;Communities;Educational institutions;Monitoring;Security;Smart phones;Software;Virtual machining;Distributed Testbed;Educational Use;End-User Machines;Experimental Facilities"
    month: "March"
    link: "/papers/zhuang_seattle_gree_13.pdf"
    abstract: "Hands-on experience is a critical part of research and education. Today's distributed testbeds fulfill that need for many students studying networking, distributed systems, cloud computing, security, operating systems, and similar topics. In this work, we discuss one such testbed, Seattle. Seattle is an open research and educational testbed that utilizes computational resources provided by end users on their existing devices. Unlike most other platforms, resources are not dedicated to the platform which allows a greater degree of network diversity and realism at the cost of programmability. Seattle is designed to preserve user security and to minimally impact application performance. We describe the architectural design of Seattle, and summarize our experiences with Seattle over the past few years as both researchers and educators. We have found that Seattle is very easy to adopt due to cross-platform support, and is also surprisingly easy for students to use. While there are programmability limitations, it is possible to construct complex applications integrated with real devices, networks, and users with Seattle as a core component. From an educational standpoint, Seattle has been shown not only to be useful as a teaching tool, it has been successful in variety of different systems classes at a variety of different types of schools. In our experience, when low-level programmability is not the main requirement, Seattle can supersede many existing testbeds for diverse educational and research tasks"

  - &cappos_uppir_fc_13
    anchor: cappos_uppir_fc_13
    title: "Avoiding Theoretical Optimality to Efficiently and Privately Retrieve Security Updates"
    keywords: "Performance, Practical Security, Private Information Retrieval"
    authors:
      - name: "J. Cappos"
    project: *uppir
    year: "2013"
    isbn: "9783642398834"
    volume: "7859 LNCS"
    series: "Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)"
    pages: "386--394"
    booktitle: "Financial Cryptography and Data Security - 17th International Conference, FC 2013, Revised Selected Papers"
    link: "/papers/cappos_uppir_fc_13.pdf"
    abstract: "This work demonstrates the feasibility of building a PIR system
with performance similar to non-PIR systems in real situations. Prior
Chor PIR systems have chosen block sizes that are theoretically optimized
to minimize communication. This (ironically) reduces the throughput
of the resulting system by roughly 50x. We constructed a Chor PIR
system called upPIR that is efficient by choosing block sizes that are theoretically
suboptimal (from a communications standpoint), but fast and
efficient in practice. For example, an upPIR mirror running on a threeyear-old
desktop provides security updates from Ubuntu 10.04 (1.4 GB of
data) fast enough to saturate a T3 link. Measurements run using mirrors
distributed around the Internet demonstrate that a client can download
software updates with upPIR about as quickly as with FTP."

  - &rafetseder_sensorium_netsys_13
    anchor: rafetseder_sensorium_netsys_13
    title: "Sensorium-A Generic Sensor Framework"
    authors:
      - name: "A. Rafetseder, F. Metzger, L. Pühringer, K. Tutschku,  Y. Zhuang, and J. Cappos"
    project: *sensibility
    journal: "Praxis der Informationsverarbeitung und Kommunikation"
    volume: "36"
    number: "1"
    pages: "46"
    year: "2013"
    link: "/papers/rafetseder_sensorium_netsys_13.pdf"
    abstract: "This contribution describes Sensorium, our framework
for accessing sensor values on computing devices and
making them available to other applications. Meanwhile, it allows
users control the exposure of privacy-related data. Our goal
is to bring the sensing capabilities of modern devices to a
broader range of reseachers and experimenters via an open
source framework. We also present a real application making
use of Sensorium's virtues: For our web service Open3GMap,
we crowd-source radio reception quality measurements in 3G
networks. We combine the data into an open geo-information
system."

  - &tr-cse-2013-02
    anchor: tr-cse-2013-02
    title: "Understanding Password Database Compromises"
    authors:
      - name: "D. Mirante and J. Cappos"
    year: "2013"
    institution: "Tech. rep. tr-cse-2013-02, Polytechnic Institute of NYU"
    link: "/papers/tr-cse-2013-02.pdf"
    abstract: "Despite continuing advances in cyber security, website incursions, in which password
databases are compromised, occur for high profile sites dozens of times each year. Dumps of
recently stolen credentials appear on a regular basis at websites like pastebin.com and
pastie.com, as do stories concerning significant breaches. As a result of these observations, we
chose to examine this phenomenon.
A study was undertaken to research information posted on the web concerning recent, high
profile website intrusions, wherein user login credentials and other data were compromised. We
searched for the party responsible for the incursion, the attack mechanism utilized, the format in
which the login data was stored, and the location of any password dumps pilfered from the site.
News stories from trade related journals, press releases from the victim company, hacker sites,
and blogs from individuals and companies engaged in security analysis were, in particular,
searched in order to find related information. A total of thirty four breaches were researched. It
should be noted that some dumps, previously published, no longer exist. This is due to either
the affected parties taking action against the site posting them, expiration of the allowed posting
period, or removal by the original poster. An effort was made to locate copies of these files,
sometimes to no avail. In those cases, details concerning the contents of the dumps were
collected from published reports about them."

  - &dev-pep-2013
    anchor: dev-pep-2013
    title: "PEP 458—Surviving a Compromise of PyPI"
    authors:
      - name: "T. Kuppusamy, V. Diaz, D. Stuffit, and J. Cappos"
    year: "2013"
    institution: "Python Enhancement Proposal"
    link: "http://legacy.python.org/dev/peps/pep-0458/"
    abstract: "This PEP proposes how the Python Package Index (PyPI [1]) should be integrated with The Update Framework [2] (TUF). TUF was designed to be a flexible security add-on to a software updater or package manager. The framework integrates best security practices such as separating role responsibilities, adopting the many-man rule for signing packages, keeping signing keys offline, and revocation of expired or compromised signing keys. For example, attackers would have to steal multiple signing keys stored independently to compromise a role responsible for specifying a repository's available files. Another role responsible for indicating the latest snapshot of the repository may have to be similarly compromised, and independent of the first compromised role.

The proposed integration will allow modern package managers such as pip [3] to be more secure against various types of security attacks on PyPI and protect users from such attacks. Specifically, this PEP describes how PyPI processes should be adapted to generate and incorporate TUF metadata (i.e., the minimum security model). The minimum security model supports verification of PyPI distributions that are signed with keys stored on PyPI: distributions uploaded by developers are signed by PyPI, require no action from developers (other than uploading the distribution), and are immediately available for download. The minimum security model also minimizes PyPI administrative responsibilities by automating much of the signing process.

This PEP does not prescribe how package managers such as pip should be adapted to install or update projects from PyPI with TUF metadata. Package managers interested in adopting TUF on the client side may consult TUF's library documentation [27], which exists for this purpose. Support for project distributions that are signed by developers (maximum security model) is also not discussed in this PEP, but is outlined in the appendix as a possible future extension and covered in detail in PEP 480 [26]. The PEP 480 extension focuses on the maximum security model, which requires more PyPI administrative work (none by clients), but it also proposes an easy-to-use key management solution for developers, how to interface with a potential future build farm on PyPI infrastructure, and discusses the feasibility of end-to-end signing."


  - &tr-cse-2013-04
    anchor: tr-cse-2013-04
    title: "Future Internet Bandwidth Trends: An Investigation on Current and Future Disruptive Technologies"
    authors:
      - name: "Y. Zhuang, J. Cappos, T.S. Rappaport, and R. McGeer"
    year: "2013"
    institution: "Tech. rep. tr-cse-2013-04, Polytechnic Institute of NYU"
    link: "/papers/tr-cse-2013-04.pdf"
    abstract: "New technologies sometimes result in disruptive changes
to the existing infrastructure. Without adequate foresight,
industry, academia, and government can be caught
flat-footed. In this work, we focus on the trends surrounding
home Internet bandwidth - the bandwidth required
by end user applications at home. As building and
managing last mile network infrastructure incurs substantial
cost, the foresight of such trends is necessary to
plan upgrades.
Using a bottom-up approach, we look at four potentially
disruptive technologies, including millimeter wave
wireless (mm-wave), the Internet of Things (IoT), Fog
Computing, and Software Defined Networking (SDN).
We examine use cases proposed by academia and industry,
delve into the bandwidth requirements for proposed
applications, and use this data to forecast future traffic
demands for typical home users. Our projections show
that bandwidth changes at end user devices will most
likely be driven by two of the above technologies: millimeter
wave wireless and Fog Computing. These technologies
not only change the peak bandwidth, but also
have noticeable secondary effects on bandwidth such as
increasing upload bandwidth use, improving flash crowd
tolerance, and increasing off-peak demand. While IoT
and SDN are important, innovative technologies, they
will not drastically alter the bandwidth usage patterns of
ordinary users at home. We hope that the data and recommendations
from this study can help business leaders
and policy makers get an early jump on emerging technologies
before they begin to shape the economy and society."

  - &muhammad_seattle_geni_12
    anchor: muhammad_seattle_geni_12
    title: "Towards a Representive Testbed: Harnessing Volunteers for Networks research"
    authors:
      - name: "M. Muhammad and J. Cappos"
    project: *seattle
    booktitle: "The First GENI Research and Educational Workshop, GREE"
    volume: "12"
    year: "2012"
    link: "/papers/muhammad_seattle_geni_12.pdf"
    abstract: "A steady rise in home systems has been seen over the past
few years. As more systems are designed and deployed, an
appropriate testbed is required to test these systems. Several
systems exist, such as PlanetLab, that currently provide
a networking testbed allowing researchers and developers to
test and measure various applications. However in the long
run such testbeds will be unable to keep up and meet all the
demands of many of the large scale modern day peer-to-peer
systems. We outline the various challenges and essentials of
a networking testbed and we provide an alternate networking
testbed that is driven by resources that are voluntarily
contributed. We talk about the various advantages and disadvantages
of the Seattle system, an open source peer-topeer
computing testbed that has the potential to meet these
demands. The testbed is composed of sandboxed resources
that are donated by volunteers. Seattle has been deployed
for about three years and supports many researchers who
are interested in a networking testbed. The testbed consists
of over 4100 nodes and is constantly growing. Seattle looks
to grow and meet the demands of networking testbeds as
they are made."

  - &matthews_etal
    anchor: matthews_etal
    title: "Lind: Challenges Turning Virtual Composition into Reality"
    authors:
      - name: "C. Matthews, J. Cappos, R. McGeer, S. Neville,  and Y. Coady"
    project: *lind
    booktitle: "Workshop on Free Composition (FREECO '11)"
    year:
    link: "/papers/matthews_etal.pdf"
    abstract: "Security is a constant sore spot in application development.
Applications now need structural support for better isolation
and security on a domain specific basis to stave off
the multitude of modern security vulnerabilities. Currently,
application developers have been relying upon cumbersome
workarounds to address these issues. We propose the design
and initial implementation details for Lind, a highly flexible
composition infrastructure that can be well-integrated
with modern application development processes and extends
traditional mechanisms like virtualization and software fault
isolation in a way that can be tailored according to an application's
need. Lind does this by providing the structures and
services needed to build a virtual component model. Since
compositions of virtual components are different than current
software systems, building and using virtual component
models provides a new set of software engineering challenges
in composition and system construction. As a possible solution
to many modern security problems, it is important to
understand how virtual component models can be evaluated,
to further both the users understanding of them, and future
research in this area. This paper proposes a design and implementation
strategy for components that run in isolation.
An evaluation of the efficacy of this approach in terms of
performance, isolation, security and composition provides
insight into the possible advantages and disadvantages of a
virtual component model."

  - &collares_ET_neat_11
    anchor: collares_ET_neat_11
    title: "ET (Smart) Phone Home!"
    authors:
      - name: "L. Collares, C. Matthews, J. Cappos, Y. Coady, and R. McGeer"
    project: *seattle
    booktitle: "Workshop on NExt-generation Applications of smarTphones (NEAT'11)"
    series:
    year:
    isbn: "978-1-4503-1183-0"
    location: "Portland, Oregon, USA"
    pages: "283--288"
    numpages: "6"
    link: "/papers/collares_ET_neat_11.pdf"
    acmid: "2095098"
    publisher: "ACM"
    address:
    keywords: "distributed systems, human-computer interaction, network troubleshooting, sandbox environments, smartphones"
    abstract: "Most home users are not able to troubleshoot advanced network issues themselves. Hours on the phone with an ISP's customer representative is a common way to solve this problem. With the advent of mobile devices with both Wi-Fi and cellular radios, troubleshooters at the ISP have a new back-door into a malfunctioning residential network. However, placing full trust in an ISP is a poor choice for a home user. In this paper we present Extra Technician (ET), a system designed to provide ISPs and others with an environment to troubleshoot home networking in a remote, safe and flexible manner."

  - &wallace_JCSC_seattle_2011
    anchor: wallace_JCSC_seattle_2011
    title: "Hands-on Internet with Seattle and Computers from Across the Globe"
    authors:
      - name: "S.A Wallace, M. Muhammad, J. Mache, and J. Cappos"
    project: *seattle
    booktitle: "Journal of Computing Sciences in College"
    link: "/papers/wallace_JCSC_seattle_2011.pdf"
    abstract: "The Internet Connectivity module is a short assignment covering distributed computing and networking. The Internet Connectivity module is part of the curriculum created for the Northwest Distributed Computer Science Department and is built upon the Seattle distributed computing platform. In this paper, we describe the module and illustrate how Seattle facilitates networking projects and experiments that use computers/resources from across the globe. In addition, we describe how the Internet Connectivity module was used in two courses, provide some comments on students' reactions to the project, and conclude with suggestions for faculty considering how to use this module in their future courses."

  - &cappos_nomodel_ssv_10
    anchor: cappos_nomodel_ssv_10
    title: "Model-based Testing Without a Model: Assessing Portability in the Seattle Testbed"
    authors:
      - name: "J.Cappos and J. Jacky"
    project: *seatlle
    booktitle: "5th Workshop on Systems Software Verification (SSV'10)"
    series: "SSV '10'"
    year: "2010"
    location:
    publisher:
    address:
    link: "/papers/cappos_nomodel_ssv_10.pdf"
    abstract: "Despite widespread OS, network, and hardware heterogeneity,
there has been a lack of research into quantifying
and improving portability of a programming environment.
We have constructed a distributed testbed
called Seattle built on a platform-independent programming
API that is implemented on different operating systems
and architectures. Our goal is to show that applications
written to our API will be portable.
In this work, we use an instrumented version of the
programming environment for testing purposes. The instrumentation
allows us to gather traces of actual program
behavior from a running implementation. These
traces can be used across different versions of the implementation
exactly as if they were test cases generated
offline from a model program, so we can commence testing
using model based testing tools, without constructing
a model program.
Such offline testing is only effective in scenarios
where traces are expected to be reproducible (deterministic).
Where reproducibility is not expected, for instance
due to nondeterminism in the network environment, we
must resort to on-the-fly testing, which does require a
model program. To validate this model program, we
can use the recorded traces of actual behavior. Validating
with captured traces should provide greater coverage
than we could achieve by validating only with traces constructed
a priori."

  - &samuel_tufccs_10
    anchor: samuel_tufccs_10
    title: "Survivable Key Compromise in Software Update Systems"
    authors:
      - name: "J. Samuel, N. Matthewson, J. Cappos, R. Dingledine"
    project: *tuf
    booktitle: "17th ACM Conference on Computer and Communications Security (CCS'10)"
    series:
    year:
    location:
    publisher: "ACM"
    address:
    link: "/papers/samuel_tuf_ccs_2010.pdf"
    abstract: "Today’s software update systems have little or no defense
against key compromise. As a result, key compromises have
put millions of software update clients at risk. Here we identify
three classes of information whose authenticity and integrity
are critical for secure software updates. Analyzing
existing software update systems with our framework, we
find their ability to communicate this information securely
in the event of a key compromise to be weak or nonexistent.
We also find that the security problems in current software
update systems are compounded by inadequate trust revocation
mechanisms. We identify core security principles that
allow software update systems to survive key compromise.
Using these ideas, we design and implement TUF, a software
update framework that increases resilience to key compromise."

  - &cappos_ccs_2010
    anchor: cappos_ccs_10
    title: "Retaining Sandbox Containment Despite Bugs in Privileged Memory-Safe Code"
    authors:
      - name: "J. Cappos, A. Dadgar, J. Rasley, J. Samuel, I. Beschastnikh, C. Barsan, A. Krishnamurthy, and T. Anderson"
    project: *lind
    booktitle: "17th ACM Conference on Computer and Communications Security (CCS '10)"
    series:
    year:
    isbn: "978-1-4503-0245-6"
    location:
    pages: 212--223
    numpages: 12
    publisher: "ACM"
    address:
    link: "/papers/samuel_tuf_ccs_2010.pdf"
    abstract: "Flaws in the standard libraries of secure sandboxes represent
a major security threat to billions of devices worldwide. The
standard libraries are hard to secure because they frequently
need to perform low-level operations that are forbidden in
untrusted application code. Existing designs have a single,
large trusted computing base that contains security checks
at the boundaries between trusted and untrusted code. Unfortunately,
flaws in the standard library often allow an attacker
to escape the security protections of the sandbox.
In this work, we construct a Python-based sandbox that
has a small, security-isolated kernel. Using a mechanism
called a security layer, we migrate privileged functionality
into memory-safe code on top of the sandbox kernel while retaining
isolation. For example, significant portions of module
import, file I/O, serialization, and network communication
routines can be provided in security layers. By moving
these routines out of the kernel, we prevent attackers from
leveraging bugs in these routines to evade sandbox containment.
We demonstrate the effectiveness of our approach by
studying past bugs in Java’s standard libraries and show
that most of these bugs would likely be contained in our
sandbox."

  - &cappos_seattle_sigcse_2009
    anchor: cappos_seattle_sigcse_2009
    title: "Seattle: A Platform for Educational Cloud Computing"
    authors:
      - name: "J. Cappos, I. Beschastnikh, A. Krishnamurthy, and T. Anderson"
    project: *seattle
    booktitle: "Proceedings of the 40th ACM Technical Symposium on Computer Science Education (SIGCSE '09)"
    series:
    year:
    isbn:
    location:
    pages: "111--115"
    numpages: "5"
    acmid:
    publisher: "ACM"
    address:
    link: "/papers/cappos_seattle_sigcse_2009.pdf"
    keywords: "cloud computing, peer-to-peer computing, cluster computing, distributed computing"
    abstract: "Cloud computing is rapidly increasing in popularity. Companies
such as RedHat, Microsoft, Amazon, Goog
le, and
IBM are increasingly funding cloud computing infrastructure
and research, making it important for students to gain
the necessary skills to work with cloud-based resources. This
paper presents a free, educational research platform called
Seattle that is community-driven, a common denominator
for diverse platform types, and is broadly deployed.
Seattle is community-driven - universities donate available
compute resources on multi-user machines to the platform.
These donations can come from systems with a wide
variety of systems operating and architectures, removing the
need for a dedicated infrastructure.
Seattle is also surprisingly flexible and supports a variety
of pedagogical uses because as a platform it represents a
common denominator for cloud computing, grid computing,
peer-to-peer networking, distributed systems, and networking.
Seattle programs are portable. Students' code can run
across different operating systems and architectures without
change, while the Seattle programming language is expressive
enough for experimentation at a fine-grained level. Our
current deployment of Seattle consists of about one thousand
computers that are distributed around the world. We
invite the computer science education community to employ
Seattle in their courses."

publication_cards:
  - type: Conference Papers
    anchor: conference
    publications:
      - *vaidya_cvc_IFIPsec_19
      - *almashaqbeh_capnet_CNS_19
      - *oliveira_blindspots_SOUPS_18
      - *afzali_git_asiaccs_18
      - *gopstein_atomswild_msr_18
      - *zhuang_sensibilityhack_sas_18
      - *yeh_atomseeg_fie_17
      - *fogcomp_fwc_17
      - *atoms_fse_17
      - *mercury_usenix_17
      - *lind_usenix_17
      - *bender_sas_17
      - *kuppusamy_escar_16
      - *torres_toto_usenixsec-2016
      - *kuppusamy_nsdi_16
      - *peddinti_ICWSM_2016
      - *rasley_checkapi_issre2015
      - *weiss_trustcom2015
      - *li-usenix-fence-2015
      - *wang_uppir_globecom2015
      - *martins-atc15-camera
      - *reininger_sensevis_sas15
      - *hooshangi_sigcse15
      - *oliveira_puzzles_acsac_2014
      - *peddenti_cosn_14
      - *zhuang_netcheck_nsdi_14
      - *cappos_blursense_sas_14
      - *cappos_refmonitor_sigcse_14
      - *cappos_uppir_fc_13
      - *samuel_tufccs_10
      - *cappos_ccs_2010
      - *cappos_seattle_sigcse_2009

  - type: Workshop Papers
    anchor: workshop
    publications:
      - *almashaqbeh_ABC_cryblock_19
      - *zhuang_sensibility_HotMobile_18
      - *cappos_nspw_2014
      - *zhuang_seattle_gree_13
      - *rafetseder_sensorium_netsys_13
      - *muhammad_seattle_geni_12
      - *matthews_etal
      - *collares_ET_neat_11
      - *cappos_nomodel_ssv_10

  - type: Journal Articles, Magazines, Tech Reports, etc.
    anchor: journals
    publications:
      - *cappos_tsumiki_TPDS_18
      - *kuppusamy_VT_IEEE_18
      - *kuppusamy_login_2017
      - *kuppusamy_uptane_design-17
      - *uptane_implementation_17
      - *uptane_deployment_17
      - *dev-pep-2016
      - *zhuang-tr-cse-2015-01
      - *zhuang_sensibility_login_2015
      - *torres_pph_login_2014
      - *polypasswordhasher_TR
      - *mueller_tomato_pik_14
      - *dev-pep-2013
      - *tr-cse-2013-04
      - *tr-cse-2013-03
      - *tr-cse-2013-02
      - *wallace_JCSC_seattle_2011
